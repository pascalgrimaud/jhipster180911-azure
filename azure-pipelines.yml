# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
- job: Test
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    JH_HOME: $(BUILD_SOURCESDIRECTORY)
    JH_INTEG: $(JH_HOME)/test-integration
    JH_FOLDER_APP: $(HOME)/app
  strategy:
    maxParallel: 2
    matrix: 
      alpha:
        message: alpha
      # beta:
      #   message: beta

  steps:
  - script: echo $(message)
    displayName: 'Display message variable'
  - script: |
      pwd
      echo "AGENT_HOMEDIRECTORY=$AGENT_HOMEDIRECTORY"
      echo "BUILD_REPOSITORY_LOCALPATH=$BUILD_REPOSITORY_LOCALPATH"
      echo "BUILD_SOURCESDIRECTORY=$BUILD_SOURCESDIRECTORY"
      echo JH_HOME=$(JH_HOME)
      echo JH_INTEG=$(JH_INTEG)
      echo JH_FOLDER_APP=$(JH_FOLDER_APP)
      echo "JH_HOME=$(JH_HOME)"
      echo "JH_INTEG=$(JH_INTEG)"
      echo "JH_FOLDER_APP=$(JH_FOLDER_APP)"
    displayName: in pipeline
  - script: ./test.sh
    displayName: launch by script
  - bash: ./test.sh
    displayName: launch by bash
  # - bash: ./test.sh
  #   displayName: launch bash
  # - script: |
  #     java -version
  #     node -v
  #     npm -v
  #     docker version
  #     docker-compose version
  #   displayName: 'Check installed tools'
  # - script: |
  #     sudo npm install -g npm
  #     npm -v
  #   displayName: 'Update NPM'
  # - script: npm install
  # - script: ./mvnw test
  #   displayName: 'Backend Tests'
  # - script: npm test -- -u
  #   displayName: 'Frontend Tests'
  # - script: echo 'end'
