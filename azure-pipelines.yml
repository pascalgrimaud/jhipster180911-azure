# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
- job: Test
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    JH_REPO: $BUILD_REPOSITORY_URI
    DISPLAY: :99.0
  strategy:
    maxParallel: 2
    matrix: 
      alpha:
        message: alpha
      # beta:
      #   message: beta

  steps:
  - script: |
      sudo apt install 
  - script: sudo /etc/init.d/mysql stop
    displayName: 'Stop MySQL'
  - script: |
      sudo apt install xvfb
      sh -e /etc/init.d/xvfb start
    displayName: 'Install and start xvbf'
  - script: echo $(message)
    displayName: 'Display message variable'
  - script: |
      wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
      sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
      sudo apt update
      sudo apt install google-chrome-stable
    displayName: 'Install google-chrome-stable'
  - script: |
      echo BUILD_REPOSITORY_URI=$BUILD_REPOSITORY_URI
      echo BUILD_REPOSITORY_URI="$BUILD_REPOSITORY_URI"
      echo BUILD_REPOSITORY_URI=$(BUILD_REPOSITORY_URI)
      echo JH_REPO=$JH_REPO
      echo JH_REPO="$JH_REPO"
      echo JH_REPO=$(JH_REPO)
    displayName: in pipeline
  - script: ./init_env.sh
    displayName: launch init_env
  - script: ./test.sh
    displayName: launch by script
  - bash: ./test.sh
    displayName: launch by bash
  # - bash: ./test.sh
  #   displayName: launch bash
  # - script: |
  #     java -version
  #     node -v
  #     npm -v
  #     docker version
  #     docker-compose version
  #   displayName: 'Check installed tools'
  # - script: |
  #     sudo npm install -g npm
  #     npm -v
  #   displayName: 'Update NPM'
  # - script: npm install
  # - script: ./mvnw test
  #   displayName: 'Backend Tests'
  # - script: npm test -- -u
  #   displayName: 'Frontend Tests'
  # - script: echo 'end'
