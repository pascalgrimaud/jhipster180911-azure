# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
- job: Test
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    JH_HOME: "$BUILD_SOURCESDIRECTORY"
    JH_INTEG: "$JH_HOME/test-integration"
    JH_SAMPLES: "$JH_INTEG/samples"
    JH_SCRIPTS: "$JH_INTEG/scripts"
  strategy:
    maxParallel: 2
    matrix: 
      alpha:
        message: alpha
      beta:
        message: beta

  steps:
  - script: echo $(message)
    displayName: 'Display message variable'
  - script: |
      pwd
      echo "AGENT_HOMEDIRECTORY=$AGENT_HOMEDIRECTORY"
      echo "BUILD_REPOSITORY_LOCALPATH=$BUILD_REPOSITORY_LOCALPATH"
      echo "BUILD_SOURCESDIRECTORY=$BUILD_SOURCESDIRECTORY"
      echo "JH_HOME=$JH_HOME"
      echo "JH_TRAVIS=$JH_TRAVIS"
      echo "JH_SAMPLES=$JH_SAMPLES"
      echo "JH_SCRIPTS=$JH_SCRIPTS"
  - script: |
      java -version
      node -v
      npm -v
      docker version
      docker-compose version
    displayName: 'Check installed tools'
  # - script: |
  #     sudo npm install -g npm
  #     npm -v
  #   displayName: 'Update NPM'
  # - script: npm install
  # - script: ./mvnw test
  #   displayName: 'Backend Tests'
  # - script: npm test -- -u
  #   displayName: 'Frontend Tests'
  # - script: echo 'end'
